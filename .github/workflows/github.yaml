name: Build Docker Image
on:
# Triggers the workflow on push request events but only for the devops branch
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - KAN-1-Issue1
  # push:
  #   branches:
  #     - devops
env:
  testPath: test
jobs:
# This workflow contains multiple jobs
 Build:
  name: BuildApp
# The type of runner that the job will run on
  #runs-on: ubuntu-latest
  runs-on: windows-latest
  steps:
  # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
   - name: Checkout Repository
     uses: actions/checkout@v3
       
   - name: Setup .Net core
     uses: actions/setup-dotnet@v3
     with:
       dotnet-version: '8.0'

   
   - name: Set up JDK 17
     uses: actions/setup-java@v2
     with:
        java-version: '17'
        distribution: 'adopt'

   - name: sonar setup
     run: | 
       dotnet tool install --global dotnet-sonarscanner  
       dotnet tool install --global dotnet-coverage
       dotnet tool install -g dotnet-reportgenerator-globaltool

   - name: sonar scan begin
     run: dotnet sonarscanner begin /k:"S-gallaxy_hello-world" /o:"s-gallaxy" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.token=${{ secrets.SONAR_TOKEN }} /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.qualitygate.wait=true

   - name: build
     run: dotnet build --configuration Release

   - name: test
     run: |
       dotnet-coverage collect -f xml -o coverage.xml dotnet test $testPath
       reportgenerator -reports:coverage.xml -targetdir:.\report

   - name: Upload test results
     uses: actions/upload-artifact@v4
     with:
        name: hello-world
        path: .report/index.html
   
   - name: sonar scan end
     run: dotnet sonarscanner end /d:sonar.token=${{ secrets.SONAR_TOKEN }}


       
